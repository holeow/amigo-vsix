<ResourceDictionary
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   xmlns:converters="clr-namespace:Configurations.UI.Converters">

   <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="Colors.xaml" />
   </ResourceDictionary.MergedDictionaries>

   <SolidColorBrush
      x:Key="GlyphBrush"
      Color="#444" />

   <Style
      x:Key="ExpandCollapseToggleStyle"
      TargetType="ToggleButton">
      <Setter Property="Focusable" Value="False" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ToggleButton">
               <Grid
                  Width="8"
                  Height="8"
                  HorizontalAlignment="Right"
                  Background="Transparent">
                  <Path
                     x:Name="ExpandPath"
                     Data="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z"
                     Fill="{TemplateBinding Foreground}"
                     Stretch="Uniform" />
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsChecked" Value="True">
                     <Setter TargetName="ExpandPath" Property="Data" Value="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="TreeViewItemFocusVisual">
      <Setter Property="Control.Template">
         <Setter.Value>
            <ControlTemplate>
               <Border>
                  <Rectangle
                     Margin="0,0,0,0"
                     Opacity="0"
                     Stroke="Black"
                     StrokeDashArray="1 2"
                     StrokeThickness="5" />
               </Border>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style
      x:Key="TreeViewItemStyle"
      TargetType="{x:Type TreeViewItem}">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
      <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
      <Setter Property="Padding" Value="1,0,0,0" />
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type TreeViewItem}">
               <ControlTemplate.Resources>
                  <converters:LeftMarginMultiplierConverter
                     x:Key="lengthConverter"
                     Length="19" />
               </ControlTemplate.Resources>
               <StackPanel>
                  <Border
                     Name="Bd"
                     Padding="{TemplateBinding Padding}"
                     Background="{TemplateBinding Background}"
                     BorderBrush="{TemplateBinding BorderBrush}"
                     BorderThickness="{TemplateBinding BorderThickness}">
                     <Grid Margin="{Binding Converter={StaticResource lengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                           <ColumnDefinition Width="19" />
                           <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <ToggleButton
                           x:Name="Expander"
                           ClickMode="Press"
                           IsChecked="{Binding Path=IsExpanded,
                                               RelativeSource={RelativeSource TemplatedParent}}"
                           Style="{StaticResource ExpandCollapseToggleStyle}" />

                        <ContentPresenter
                           x:Name="PART_Header"
                           Grid.Column="1"
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                           ContentSource="Header" />
                     </Grid>
                  </Border>
                  <ItemsPresenter x:Name="ItemsHost" />
               </StackPanel>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsExpanded" Value="false">
                     <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                  </Trigger>
                  <Trigger Property="HasItems" Value="false">
                     <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                  </Trigger>
                  <MultiTrigger>
                     <MultiTrigger.Conditions>
                        <Condition Property="HasHeader" Value="false" />
                        <Condition Property="Width" Value="Auto" />
                     </MultiTrigger.Conditions>
                     <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                  </MultiTrigger>
                  <MultiTrigger>
                     <MultiTrigger.Conditions>
                        <Condition Property="HasHeader" Value="false" />
                        <Condition Property="Height" Value="Auto" />
                     </MultiTrigger.Conditions>
                     <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                  </MultiTrigger>
                  <Trigger Property="IsSelected" Value="true">
                     <Setter TargetName="Expander" Property="Foreground" Value="{StaticResource SelectedItemForeground}" />
                     <Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedItemBackground}" />
                     <Setter Property="Foreground" Value="{StaticResource SelectedItemForeground}" />
                  </Trigger>


                  <!--! Inactive items background and foreground-->
                  <MultiTrigger>
                     <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                     </MultiTrigger.Conditions>
                     <Setter TargetName="Expander" Property="Foreground" Value="{StaticResource InactiveSelectedItemForeground}" />
                     <Setter TargetName="Bd" Property="Background" Value="{StaticResource InactiveSelectedItemBackground}" />
                     <Setter Property="Foreground" Value="{StaticResource InactiveSelectedItemForeground}" />
                  </MultiTrigger>


                  <Trigger Property="IsEnabled" Value="false">
                     <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
</ResourceDictionary>