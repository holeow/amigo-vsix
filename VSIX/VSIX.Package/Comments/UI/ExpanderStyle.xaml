<ResourceDictionary
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

   <Style x:Key="ExpanderHeaderFocusVisual">
      <Setter Property="Control.Template">
         <Setter.Value>
            <ControlTemplate>
               <Border>
                  <Rectangle
                     Margin="0"
                     SnapsToDevicePixels="true"
                     Stroke="Black"
                     StrokeDashArray="1 2"
                     StrokeThickness="1" />
               </Border>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style
      x:Key="ExpanderDownHeaderStyle"
      TargetType="{x:Type ToggleButton}">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
               <Border
                  Height="30"
                  Padding="{TemplateBinding Padding}"
                  Background="Transparent"
                  BorderBrush="Gray"
                  BorderThickness="0,0,0,1">
                  <Grid
                     Margin="5,0,0,0"
                     SnapsToDevicePixels="False">
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="19" />
                        <ColumnDefinition Width="*" />
                     </Grid.ColumnDefinitions>
                     <Path
                        x:Name="arrow"
                        Width="10"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M 1,1.5 L 4.5,5 L 8,1.5"
                        SnapsToDevicePixels="false"
                        Stretch="Uniform"
                        Stroke="#666"
                        StrokeThickness="2" />
                     <ContentPresenter
                        Grid.Column="1"
                        Margin="4,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="True" />
                  </Grid>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsChecked" Value="true">
                     <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="true">
                     <Setter TargetName="arrow" Property="Stroke" Value="#222" />
                  </Trigger>
                  <Trigger Property="IsPressed" Value="true">
                     <Setter TargetName="arrow" Property="Stroke" Value="#FF003366" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style
      x:Key="ExpanderStyle"
      TargetType="{x:Type Expander}">
      <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Setter Property="VerticalContentAlignment" Value="Stretch" />
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Expander}">
               <Border
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="3"
                  SnapsToDevicePixels="true">
                  <DockPanel>
                     <ToggleButton
                        x:Name="HeaderSite"
                        MinWidth="0"
                        MinHeight="0"
                        Margin="1"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Header}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                        DockPanel.Dock="Top"
                        FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        Foreground="{TemplateBinding Foreground}"
                        IsChecked="{Binding IsExpanded,
                                            Mode=TwoWay,
                                            RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{StaticResource ExpanderDownHeaderStyle}" />
                     <ContentPresenter
                        x:Name="ExpandSite"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        DockPanel.Dock="Bottom"
                        Focusable="false"
                        Visibility="Collapsed" />
                  </DockPanel>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsExpanded" Value="true">
                     <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="false">
                     <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
</ResourceDictionary>
